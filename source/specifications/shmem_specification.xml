<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE api-specification SYSTEM "../dtd/api-specification.dtd">
<api-specification unique-name="SHMEM">
	<api-headers>
		<header>shmem.h</header>
		<header>pshmem.h</header>
		<header>p_shmem_mapping.h</header> <!-- map Pshmem* calls to pshmem* calls !-->
	</api-headers>
    <functions>
		<function name="shmem_init" return-type="void">
			<function-arguments>
			</function-arguments>
			<analyses>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_init_thread" return-type="int">
			<function-arguments>
				<function-argument name="requested" type="int" intent="in" order="0"></function-argument>
				<function-argument name="provided" type="int*" intent="in" order="1"></function-argument>
			</function-arguments>
			<analyses>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_1_requested" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_2_provided" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_finalize" return-type="void">
			<function-arguments>
			</function-arguments>
			<analyses>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_global_exit" return-type="void">
			<function-arguments>
				<function-argument name="status" type="int" intent="in" order="0"></function-argument>
			</function-arguments>
			<analyses>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_1_status" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_n_pes" return-type="int">
			<function-arguments>
			</function-arguments>
			<analyses>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_my_pe" return-type="int">
			<function-arguments>
			</function-arguments>
			<analyses>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_query_thread" return-type="void">
			<function-arguments>
				<function-argument name="provided" type="int*" intent="in" order="0"></function-argument>
			</function-arguments>
			<analyses>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_1_provided" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_info_get_version" return-type="void">
			<function-arguments>
				<function-argument name="major" type="int*" intent="in" order="0"></function-argument>
				<function-argument name="minor" type="int*" intent="in" order="1"></function-argument>
			</function-arguments>
			<analyses>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_1_major" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_2_minor" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_info_get_name" return-type="void">
			<function-arguments>
				<function-argument name="name" type="char*" intent="in" order="0"></function-argument>
			</function-arguments>
			<analyses>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_1_name" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_pe_accessible" return-type="int">
			<function-arguments>
				<function-argument name="pe" type="int" intent="in" order="0"></function-argument>
			</function-arguments>
			<analyses>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_1_pe" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_addr_accessible" return-type="int">
			<function-arguments>
				<function-argument name="addr" type="const void*" intent="in" order="0"></function-argument>
				<function-argument name="pe" type="int" intent="in" order="1"></function-argument>
			</function-arguments>
			<analyses>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_1_addr" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_2_pe" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_malloc" return-type="void*">
			<function-arguments>
				<function-argument name="size" type="size_t" intent="in" order="0"></function-argument>
			</function-arguments>
			<analyses>
				<analysis order="post" name="SHMEMVectorClockWrapper:tick" group="MUST_VectorClock">
                    <analysis-arguments>
                    </analysis-arguments>
                </analysis>
				<analysis order="post" name="SHMEMVectorClockWrapper:mallocSegment" group="MUST_VectorClock">
                    <analysis-arguments>
                        <analysis-argument type="operation-len" analysis-arg-order="0">
                            <op-name group="MUST_Base" id="1">provideParallelIdStorage</op-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="1">
                            <call-arg-name>size</call-arg-name>
                        </analysis-argument>
                    </analysis-arguments>
                </analysis>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_1_size" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_calloc" return-type="void*">
			<function-arguments>
				<function-argument name="count" type="size_t" intent="in" order="0"></function-argument>
				<function-argument name="size" type="size_t" intent="in" order="1"></function-argument>
			</function-arguments>
			<analyses>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_1_count" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_2_size" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_align" return-type="void*">
			<function-arguments>
				<function-argument name="align" type="size_t" intent="in" order="0"></function-argument>
				<function-argument name="size" type="size_t" intent="in" order="1"></function-argument>
			</function-arguments>
			<analyses>
				<analysis order="post" name="SHMEMVectorClockWrapper:tick" group="MUST_VectorClock">
                    <analysis-arguments>
                    </analysis-arguments>
                </analysis>
				<analysis order="post" name="SHMEMVectorClockWrapper:allToAll" group="MUST_VectorClock">
                    <analysis-arguments>
                        <analysis-argument type="operation-len" analysis-arg-order="0">
                            <op-name group="MUST_Base" id="1">provideParallelIdStorage</op-name>
                        </analysis-argument>
                    </analysis-arguments>
                </analysis>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_1_align" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_2_size" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_realloc" return-type="void*">
			<function-arguments>
				<function-argument name="ptr" type="void*" intent="in" order="0"></function-argument>
				<function-argument name="size" type="size_t" intent="in" order="1"></function-argument>
			</function-arguments>
			<analyses>
				<analysis order="post" name="SHMEMVectorClockWrapper:tick" group="MUST_VectorClock">
                    <analysis-arguments>
                    </analysis-arguments>
                </analysis>
				<analysis order="post" name="SHMEMVectorClockWrapper:allToAll" group="MUST_VectorClock">
                    <analysis-arguments>
                        <analysis-argument type="operation-len" analysis-arg-order="0">
                            <op-name group="MUST_Base" id="1">provideParallelIdStorage</op-name>
                        </analysis-argument>
                    </analysis-arguments>
                </analysis>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_1_ptr" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_2_size" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_free" return-type="void">
			<function-arguments>
				<function-argument name="ptr" type="void*" intent="in" order="0"></function-argument>
			</function-arguments>
			<analyses>
				<analysis order="post" name="SHMEMVectorClockWrapper:tick" group="MUST_VectorClock">
                    <analysis-arguments>
                    </analysis-arguments>
                </analysis>
				<analysis order="post" name="SHMEMVectorClockWrapper:freeSegment" group="MUST_VectorClock">
					<analysis-arguments>
						<analysis-argument type="operation-len" analysis-arg-order="0">
							<op-name group="MUST_Base" id="1">provideParallelIdStorage</op-name>
						</analysis-argument>
						<analysis-argument type="operation" analysis-arg-order="1">
							<op-name group="MUST_Base" id="1">buildArgumentId_1_ptr</op-name>
						</analysis-argument>
					</analysis-arguments>
				</analysis>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_1_ptr" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_ptr" return-type="void*">
			<function-arguments>
				<function-argument name="ptr" type="const void*" intent="in" order="0"></function-argument>
				<function-argument name="pe" type="int" intent="in" order="1"></function-argument>
			</function-arguments>
			<analyses>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_1_ptr" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_2_pe" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_ctx_t oshmem_ctx_default;" return-type="extern">
			<function-arguments>
			</function-arguments>
			<analyses>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_ctx_create" return-type="int">
			<function-arguments>
				<function-argument name="options" type="long" intent="in" order="0"></function-argument>
				<function-argument name="ctx" type="shmem_ctx_t*" intent="in" order="1"></function-argument>
			</function-arguments>
			<analyses>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_1_options" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_2_ctx" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_ctx_destroy" return-type="void">
			<function-arguments>
				<function-argument name="ctx" type="shmem_ctx_t" intent="in" order="0"></function-argument>
			</function-arguments>
			<analyses>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_1_ctx" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_set_lock" return-type="void">
			<function-arguments>
				<function-argument name="lock" type="volatile long*" intent="in" order="0"></function-argument>
			</function-arguments>
			<analyses>
				<analysis order="post" name="SHMEMVectorClockWrapper:tick" group="MUST_VectorClock">
                    <analysis-arguments>
                    </analysis-arguments>
                </analysis>
				<analysis order="post" name="SHMEMVectorClockWrapper:lock" group="MUST_VectorClock">
					<analysis-arguments>
						<analysis-argument type="operation-len" analysis-arg-order="0">
							<op-name group="MUST_Base" id="1">provideParallelIdStorage</op-name>
						</analysis-argument>
						<analysis-argument type="operation" analysis-arg-order="1">
							<op-name group="MUST_Base" id="1">buildArgumentId_1_ptr</op-name>
						</analysis-argument>
					</analysis-arguments>
				</analysis>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_1_ptr" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_clear_lock" return-type="void">
			<function-arguments>
				<function-argument name="lock" type="volatile long*" intent="in" order="0"></function-argument>
			</function-arguments>
			<analyses>
				<analysis order="post" name="SHMEMVectorClockWrapper:unlock" group="MUST_VectorClock">
					<analysis-arguments>
						<analysis-argument type="operation-len" analysis-arg-order="0">
							<op-name group="MUST_Base" id="1">provideParallelIdStorage</op-name>
						</analysis-argument>
						<analysis-argument type="operation" analysis-arg-order="1">
							<op-name group="MUST_Base" id="1">buildArgumentId_1_ptr</op-name>
						</analysis-argument>
					</analysis-arguments>
				</analysis>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_1_ptr" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_test_lock" return-type="int">
			<function-arguments>
				<function-argument name="lock" type="long*" intent="in" order="0"></function-argument>
			</function-arguments>
			<analyses>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_1_lock" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_short_wait" return-type="void">
			<function-arguments>
				<function-argument name="addr" type="short*" intent="in" order="0"></function-argument>
				<function-argument name="value" type="short" intent="in" order="1"></function-argument>
			</function-arguments>
			<analyses>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_1_addr" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_2_value" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_int_wait" return-type="void">
			<function-arguments>
				<function-argument name="addr" type="int*" intent="in" order="0"></function-argument>
				<function-argument name="value" type="int" intent="in" order="1"></function-argument>
			</function-arguments>
			<analyses>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_1_addr" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_2_value" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_long_wait" return-type="void">
			<function-arguments>
				<function-argument name="addr" type="long*" intent="in" order="0"></function-argument>
				<function-argument name="value" type="long" intent="in" order="1"></function-argument>
			</function-arguments>
			<analyses>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_1_addr" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_2_value" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_longlong_wait" return-type="void">
			<function-arguments>
				<function-argument name="addr" type="long long*" intent="in" order="0"></function-argument>
				<function-argument name="value" type="long long" intent="in" order="1"></function-argument>
			</function-arguments>
			<analyses>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_1_addr" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_2_value" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_wait" return-type="void">
			<function-arguments>
				<function-argument name="addr" type="long*" intent="in" order="0"></function-argument>
				<function-argument name="value" type="long" intent="in" order="1"></function-argument>
			</function-arguments>
			<analyses>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_1_addr" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_2_value" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_short_wait_until" return-type="void">
			<function-arguments>
				<function-argument name="addr" type="short*" intent="in" order="0"></function-argument>
				<function-argument name="cmp" type="int" intent="in" order="1"></function-argument>
				<function-argument name="value" type="short" intent="in" order="2"></function-argument>
			</function-arguments>
			<analyses>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_1_addr" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_2_cmp" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_3_value" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_int_wait_until" return-type="void">
			<function-arguments>
				<function-argument name="addr" type="int*" intent="in" order="0"></function-argument>
				<function-argument name="cmp" type="int" intent="in" order="1"></function-argument>
				<function-argument name="value" type="int" intent="in" order="2"></function-argument>
			</function-arguments>
			<analyses>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_1_addr" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_2_cmp" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_3_value" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_long_wait_until" return-type="void">
			<function-arguments>
				<function-argument name="addr" type="long*" intent="in" order="0"></function-argument>
				<function-argument name="cmp" type="int" intent="in" order="1"></function-argument>
				<function-argument name="value" type="long" intent="in" order="2"></function-argument>
			</function-arguments>
			<analyses>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_1_addr" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_2_cmp" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_3_value" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_longlong_wait_until" return-type="void">
			<function-arguments>
				<function-argument name="addr" type="long long*" intent="in" order="0"></function-argument>
				<function-argument name="cmp" type="int" intent="in" order="1"></function-argument>
				<function-argument name="value" type="long long" intent="in" order="2"></function-argument>
			</function-arguments>
			<analyses>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_1_addr" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_2_cmp" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_3_value" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_ushort_wait_until" return-type="void">
			<function-arguments>
				<function-argument name="addr" type="unsigned short*" intent="in" order="0"></function-argument>
				<function-argument name="cmp" type="int" intent="in" order="1"></function-argument>
				<function-argument name="value" type="unsigned short" intent="in" order="2"></function-argument>
			</function-arguments>
			<analyses>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_1_addr" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_2_cmp" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_3_value" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_uint_wait_until" return-type="void">
			<function-arguments>
				<function-argument name="addr" type="unsigned int*" intent="in" order="0"></function-argument>
				<function-argument name="cmp" type="int" intent="in" order="1"></function-argument>
				<function-argument name="value" type="unsigned int" intent="in" order="2"></function-argument>
			</function-arguments>
			<analyses>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_1_addr" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_2_cmp" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_3_value" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_ulong_wait_until" return-type="void">
			<function-arguments>
				<function-argument name="addr" type="unsigned long*" intent="in" order="0"></function-argument>
				<function-argument name="cmp" type="int" intent="in" order="1"></function-argument>
				<function-argument name="value" type="unsigned long" intent="in" order="2"></function-argument>
			</function-arguments>
			<analyses>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_1_addr" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_2_cmp" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_3_value" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_ulonglong_wait_until" return-type="void">
			<function-arguments>
				<function-argument name="addr" type="unsigned long_long*" intent="in" order="0"></function-argument>
				<function-argument name="cmp" type="int" intent="in" order="1"></function-argument>
				<function-argument name="value" type="unsigned long_long" intent="in" order="2"></function-argument>
			</function-arguments>
			<analyses>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_1_addr" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_2_cmp" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_3_value" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_int32_wait_until" return-type="void">
			<function-arguments>
				<function-argument name="addr" type="int32_t*" intent="in" order="0"></function-argument>
				<function-argument name="cmp" type="int" intent="in" order="1"></function-argument>
				<function-argument name="value" type="int32_t" intent="in" order="2"></function-argument>
			</function-arguments>
			<analyses>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_1_addr" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_2_cmp" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_3_value" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_int64_wait_until" return-type="void">
			<function-arguments>
				<function-argument name="addr" type="int64_t*" intent="in" order="0"></function-argument>
				<function-argument name="cmp" type="int" intent="in" order="1"></function-argument>
				<function-argument name="value" type="int64_t" intent="in" order="2"></function-argument>
			</function-arguments>
			<analyses>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_1_addr" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_2_cmp" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_3_value" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_uint32_wait_until" return-type="void">
			<function-arguments>
				<function-argument name="addr" type="uint32_t*" intent="in" order="0"></function-argument>
				<function-argument name="cmp" type="int" intent="in" order="1"></function-argument>
				<function-argument name="value" type="uint32_t" intent="in" order="2"></function-argument>
			</function-arguments>
			<analyses>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_1_addr" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_2_cmp" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_3_value" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_uint64_wait_until" return-type="void">
			<function-arguments>
				<function-argument name="addr" type="uint64_t*" intent="in" order="0"></function-argument>
				<function-argument name="cmp" type="int" intent="in" order="1"></function-argument>
				<function-argument name="value" type="uint64_t" intent="in" order="2"></function-argument>
			</function-arguments>
			<analyses>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_1_addr" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_2_cmp" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_3_value" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_size_wait_until" return-type="void">
			<function-arguments>
				<function-argument name="addr" type="size_t*" intent="in" order="0"></function-argument>
				<function-argument name="cmp" type="int" intent="in" order="1"></function-argument>
				<function-argument name="value" type="size_t" intent="in" order="2"></function-argument>
			</function-arguments>
			<analyses>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_1_addr" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_2_cmp" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_3_value" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_ptrdiff_wait_until" return-type="void">
			<function-arguments>
				<function-argument name="addr" type="ptrdiff_t*" intent="in" order="0"></function-argument>
				<function-argument name="cmp" type="int" intent="in" order="1"></function-argument>
				<function-argument name="value" type="ptrdiff_t" intent="in" order="2"></function-argument>
			</function-arguments>
			<analyses>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_1_addr" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_2_cmp" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_3_value" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_short_test" return-type="int">
			<function-arguments>
				<function-argument name="addr" type="short*" intent="in" order="0"></function-argument>
				<function-argument name="cmp" type="int" intent="in" order="1"></function-argument>
				<function-argument name="value" type="short" intent="in" order="2"></function-argument>
			</function-arguments>
			<analyses>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_1_addr" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_2_cmp" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_3_value" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_int_test" return-type="int">
			<function-arguments>
				<function-argument name="addr" type="int*" intent="in" order="0"></function-argument>
				<function-argument name="cmp" type="int" intent="in" order="1"></function-argument>
				<function-argument name="value" type="int" intent="in" order="2"></function-argument>
			</function-arguments>
			<analyses>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_1_addr" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_2_cmp" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_3_value" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_long_test" return-type="int">
			<function-arguments>
				<function-argument name="addr" type="long*" intent="in" order="0"></function-argument>
				<function-argument name="cmp" type="int" intent="in" order="1"></function-argument>
				<function-argument name="value" type="long" intent="in" order="2"></function-argument>
			</function-arguments>
			<analyses>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_1_addr" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_2_cmp" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_3_value" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_longlong_test" return-type="int">
			<function-arguments>
				<function-argument name="addr" type="long long*" intent="in" order="0"></function-argument>
				<function-argument name="cmp" type="int" intent="in" order="1"></function-argument>
				<function-argument name="value" type="long long" intent="in" order="2"></function-argument>
			</function-arguments>
			<analyses>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_1_addr" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_2_cmp" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_3_value" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_ushort_test" return-type="int">
			<function-arguments>
				<function-argument name="addr" type="unsigned short*" intent="in" order="0"></function-argument>
				<function-argument name="cmp" type="int" intent="in" order="1"></function-argument>
				<function-argument name="value" type="unsigned short" intent="in" order="2"></function-argument>
			</function-arguments>
			<analyses>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_1_addr" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_2_cmp" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_3_value" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_uint_test" return-type="int">
			<function-arguments>
				<function-argument name="addr" type="unsigned int*" intent="in" order="0"></function-argument>
				<function-argument name="cmp" type="int" intent="in" order="1"></function-argument>
				<function-argument name="value" type="unsigned int" intent="in" order="2"></function-argument>
			</function-arguments>
			<analyses>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_1_addr" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_2_cmp" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_3_value" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_ulong_test" return-type="int">
			<function-arguments>
				<function-argument name="addr" type="unsigned long*" intent="in" order="0"></function-argument>
				<function-argument name="cmp" type="int" intent="in" order="1"></function-argument>
				<function-argument name="value" type="unsigned long" intent="in" order="2"></function-argument>
			</function-arguments>
			<analyses>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_1_addr" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_2_cmp" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_3_value" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_ulonglong_test" return-type="int">
			<function-arguments>
				<function-argument name="addr" type="unsigned long_long*" intent="in" order="0"></function-argument>
				<function-argument name="cmp" type="int" intent="in" order="1"></function-argument>
				<function-argument name="value" type="unsigned long_long" intent="in" order="2"></function-argument>
			</function-arguments>
			<analyses>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_1_addr" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_2_cmp" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_3_value" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_int32_test" return-type="int">
			<function-arguments>
				<function-argument name="addr" type="int32_t*" intent="in" order="0"></function-argument>
				<function-argument name="cmp" type="int" intent="in" order="1"></function-argument>
				<function-argument name="value" type="int32_t" intent="in" order="2"></function-argument>
			</function-arguments>
			<analyses>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_1_addr" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_2_cmp" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_3_value" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_int64_test" return-type="int">
			<function-arguments>
				<function-argument name="addr" type="int64_t*" intent="in" order="0"></function-argument>
				<function-argument name="cmp" type="int" intent="in" order="1"></function-argument>
				<function-argument name="value" type="int64_t" intent="in" order="2"></function-argument>
			</function-arguments>
			<analyses>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_1_addr" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_2_cmp" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_3_value" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_uint32_test" return-type="int">
			<function-arguments>
				<function-argument name="addr" type="uint32_t*" intent="in" order="0"></function-argument>
				<function-argument name="cmp" type="int" intent="in" order="1"></function-argument>
				<function-argument name="value" type="uint32_t" intent="in" order="2"></function-argument>
			</function-arguments>
			<analyses>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_1_addr" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_2_cmp" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_3_value" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_uint64_test" return-type="int">
			<function-arguments>
				<function-argument name="addr" type="uint64_t*" intent="in" order="0"></function-argument>
				<function-argument name="cmp" type="int" intent="in" order="1"></function-argument>
				<function-argument name="value" type="uint64_t" intent="in" order="2"></function-argument>
			</function-arguments>
			<analyses>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_1_addr" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_2_cmp" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_3_value" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_size_test" return-type="int">
			<function-arguments>
				<function-argument name="addr" type="size_t*" intent="in" order="0"></function-argument>
				<function-argument name="cmp" type="int" intent="in" order="1"></function-argument>
				<function-argument name="value" type="size_t" intent="in" order="2"></function-argument>
			</function-arguments>
			<analyses>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_1_addr" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_2_cmp" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_3_value" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_ptrdiff_test" return-type="int">
			<function-arguments>
				<function-argument name="addr" type="ptrdiff_t*" intent="in" order="0"></function-argument>
				<function-argument name="cmp" type="int" intent="in" order="1"></function-argument>
				<function-argument name="value" type="ptrdiff_t" intent="in" order="2"></function-argument>
			</function-arguments>
			<analyses>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_1_addr" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_2_cmp" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_3_value" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_barrier" return-type="void">
			<function-arguments>
				<function-argument name="PE_start" type="int" intent="in" order="0"></function-argument>
				<function-argument name="logPE_stride" type="int" intent="in" order="1"></function-argument>
				<function-argument name="PE_size" type="int" intent="in" order="2"></function-argument>
				<function-argument name="pSync" type="long*" intent="in" order="3"></function-argument>
			</function-arguments>
			<analyses>
				<analysis order="post" name="SHMEMVectorClockWrapper:tick" group="MUST_VectorClock">
                    <analysis-arguments>
                    </analysis-arguments>
                </analysis>
				<analysis order="post" name="SHMEMVectorClockWrapper:allToAllProcs" group="MUST_VectorClock">
                    <analysis-arguments>
                        <analysis-argument type="operation-len" analysis-arg-order="0">
                            <op-name group="MUST_Base" id="1">provideParallelIdStorage</op-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="1">
                            <call-arg-name>PE_start</call-arg-name>
                        </analysis-argument>
						<analysis-argument type="mapped" analysis-arg-order="2">
                            <call-arg-name>logPE_stride</call-arg-name>
                        </analysis-argument>
						<analysis-argument type="mapped" analysis-arg-order="3">
                            <call-arg-name>PE_size</call-arg-name>
                        </analysis-argument>
                    </analysis-arguments>
                </analysis>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_1_PE_start" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_2_logPE_stride" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_3_PE_size" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_4_pSync" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_barrier_all" return-type="void">
			<function-arguments>
			</function-arguments>
			<analyses>
				<analysis order="post" name="SHMEMVectorClockWrapper:tick" group="MUST_VectorClock">
                    <analysis-arguments>
                    </analysis-arguments>
                </analysis>
				<analysis order="post" name="SHMEMVectorClockWrapper:allToAll" group="MUST_VectorClock">
                    <analysis-arguments>
                        <analysis-argument type="operation-len" analysis-arg-order="0">
                            <op-name group="MUST_Base" id="1">provideParallelIdStorage</op-name>
                        </analysis-argument>
                    </analysis-arguments>
                </analysis>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_sync" return-type="void">
			<function-arguments>
				<function-argument name="PE_start" type="int" intent="in" order="0"></function-argument>
				<function-argument name="logPE_stride" type="int" intent="in" order="1"></function-argument>
				<function-argument name="PE_size" type="int" intent="in" order="2"></function-argument>
				<function-argument name="pSync" type="long*" intent="in" order="3"></function-argument>
			</function-arguments>
			<analyses>
				<analysis order="post" name="SHMEMVectorClockWrapper:tick" group="MUST_VectorClock">
                    <analysis-arguments>
                    </analysis-arguments>
                </analysis>
				<analysis order="post" name="SHMEMVectorClockWrapper:allToAllProcs" group="MUST_VectorClock">
                    <analysis-arguments>
                        <analysis-argument type="operation-len" analysis-arg-order="0">
                            <op-name group="MUST_Base" id="1">provideParallelIdStorage</op-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="1">
                            <call-arg-name>PE_start</call-arg-name>
                        </analysis-argument>
						<analysis-argument type="mapped" analysis-arg-order="2">
                            <call-arg-name>logPE_stride</call-arg-name>
                        </analysis-argument>
						<analysis-argument type="mapped" analysis-arg-order="3">
                            <call-arg-name>PE_size</call-arg-name>
                        </analysis-argument>
                    </analysis-arguments>
                </analysis>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_1_PE_start" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_2_logPE_stride" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_3_PE_size" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_4_pSync" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_sync_all" return-type="void">
			<function-arguments>
			</function-arguments>
			<analyses>
				<analysis order="post" name="SHMEMVectorClockWrapper:tick" group="MUST_VectorClock">
                    <analysis-arguments>
                    </analysis-arguments>
                </analysis>
				<analysis order="post" name="SHMEMVectorClockWrapper:allToAll" group="MUST_VectorClock">
                    <analysis-arguments>
                        <analysis-argument type="operation-len" analysis-arg-order="0">
                            <op-name group="MUST_Base" id="1">provideParallelIdStorage</op-name>
                        </analysis-argument>
                    </analysis-arguments>
                </analysis>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_fence" return-type="void">
			<function-arguments>
			</function-arguments>
			<analyses>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_ctx_fence" return-type="void">
			<function-arguments>
				<function-argument name="ctx" type="shmem_ctx_t" intent="in" order="0"></function-argument>
			</function-arguments>
			<analyses>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_1_ctx" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_quiet" return-type="void">
			<function-arguments>
			</function-arguments>
			<analyses>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_ctx_quiet" return-type="void">
			<function-arguments>
				<function-argument name="ctx" type="shmem_ctx_t" intent="in" order="0"></function-argument>
			</function-arguments>
			<analyses>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_1_ctx" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_broadcast32" return-type="void">
			<function-arguments>
				<function-argument name="target" type="void*" intent="in" order="0"></function-argument>
				<function-argument name="source" type="const void*" intent="in" order="1"></function-argument>
				<function-argument name="nlong" type="size_t" intent="in" order="2"></function-argument>
				<function-argument name="PE_root" type="int" intent="in" order="3"></function-argument>
				<function-argument name="PE_start" type="int" intent="in" order="4"></function-argument>
				<function-argument name="logPE_stride" type="int" intent="in" order="5"></function-argument>
				<function-argument name="PE_size" type="int" intent="in" order="6"></function-argument>
				<function-argument name="pSync" type="long*" intent="in" order="7"></function-argument>
			</function-arguments>
			<analyses>
				<analysis order="post" name="SHMEMVectorClockWrapper:tick" group="MUST_VectorClock">
                    <analysis-arguments>
                    </analysis-arguments>
                </analysis>
				<analysis order="post" name="SHMEMVectorClockWrapper:oneToAllProcs" group="MUST_VectorClock">
                    <analysis-arguments>
                        <analysis-argument type="operation-len" analysis-arg-order="0">
                            <op-name group="MUST_Base" id="1">provideParallelIdStorage</op-name>
                        </analysis-argument>
						<analysis-argument type="mapped" analysis-arg-order="1">
                            <call-arg-name>PE_root</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="2">
                            <call-arg-name>PE_start</call-arg-name>
                        </analysis-argument>
						<analysis-argument type="mapped" analysis-arg-order="3">
                            <call-arg-name>logPE_stride</call-arg-name>
                        </analysis-argument>
						<analysis-argument type="mapped" analysis-arg-order="4">
                            <call-arg-name>PE_size</call-arg-name>
                        </analysis-argument>
                    </analysis-arguments>
                </analysis>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_1_target" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_2_source" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_3_nlong" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_4_PE_root" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_5_PE_start" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_6_logPE_stride" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_7_PE_size" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_8_pSync" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_broadcast64" return-type="void">
			<function-arguments>
				<function-argument name="target" type="void*" intent="in" order="0"></function-argument>
				<function-argument name="source" type="const void*" intent="in" order="1"></function-argument>
				<function-argument name="nlong" type="size_t" intent="in" order="2"></function-argument>
				<function-argument name="PE_root" type="int" intent="in" order="3"></function-argument>
				<function-argument name="PE_start" type="int" intent="in" order="4"></function-argument>
				<function-argument name="logPE_stride" type="int" intent="in" order="5"></function-argument>
				<function-argument name="PE_size" type="int" intent="in" order="6"></function-argument>
				<function-argument name="pSync" type="long*" intent="in" order="7"></function-argument>
			</function-arguments>
			<analyses>
				<analysis order="post" name="SHMEMVectorClockWrapper:tick" group="MUST_VectorClock">
                    <analysis-arguments>
                    </analysis-arguments>
                </analysis>
				<analysis order="post" name="SHMEMVectorClockWrapper:oneToAllProcs" group="MUST_VectorClock">
                    <analysis-arguments>
                        <analysis-argument type="operation-len" analysis-arg-order="0">
                            <op-name group="MUST_Base" id="1">provideParallelIdStorage</op-name>
                        </analysis-argument>
						<analysis-argument type="mapped" analysis-arg-order="1">
                            <call-arg-name>PE_root</call-arg-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="2">
                            <call-arg-name>PE_start</call-arg-name>
                        </analysis-argument>
						<analysis-argument type="mapped" analysis-arg-order="3">
                            <call-arg-name>logPE_stride</call-arg-name>
                        </analysis-argument>
						<analysis-argument type="mapped" analysis-arg-order="4">
                            <call-arg-name>PE_size</call-arg-name>
                        </analysis-argument>
                    </analysis-arguments>
                </analysis>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_1_target" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_2_source" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_3_nlong" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_4_PE_root" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_5_PE_start" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_6_logPE_stride" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_7_PE_size" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_8_pSync" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_collect32" return-type="void">
			<function-arguments>
				<function-argument name="target" type="void*" intent="in" order="0"></function-argument>
				<function-argument name="source" type="const void*" intent="in" order="1"></function-argument>
				<function-argument name="nlong" type="size_t" intent="in" order="2"></function-argument>
				<function-argument name="PE_start" type="int" intent="in" order="3"></function-argument>
				<function-argument name="logPE_stride" type="int" intent="in" order="4"></function-argument>
				<function-argument name="PE_size" type="int" intent="in" order="5"></function-argument>
				<function-argument name="pSync" type="long*" intent="in" order="6"></function-argument>
			</function-arguments>
			<analyses>
				<analysis order="post" name="SHMEMVectorClockWrapper:tick" group="MUST_VectorClock">
                    <analysis-arguments>
                    </analysis-arguments>
                </analysis>
				<analysis order="post" name="SHMEMVectorClockWrapper:allToAllProcs" group="MUST_VectorClock">
                    <analysis-arguments>
                        <analysis-argument type="operation-len" analysis-arg-order="0">
                            <op-name group="MUST_Base" id="1">provideParallelIdStorage</op-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="1">
                            <call-arg-name>PE_start</call-arg-name>
                        </analysis-argument>
						<analysis-argument type="mapped" analysis-arg-order="2">
                            <call-arg-name>logPE_stride</call-arg-name>
                        </analysis-argument>
						<analysis-argument type="mapped" analysis-arg-order="3">
                            <call-arg-name>PE_size</call-arg-name>
                        </analysis-argument>
                    </analysis-arguments>
                </analysis>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_1_target" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_2_source" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_3_nlong" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_4_PE_start" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_5_logPE_stride" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_6_PE_size" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_7_pSync" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_collect64" return-type="void">
			<function-arguments>
				<function-argument name="target" type="void*" intent="in" order="0"></function-argument>
				<function-argument name="source" type="const void*" intent="in" order="1"></function-argument>
				<function-argument name="nlong" type="size_t" intent="in" order="2"></function-argument>
				<function-argument name="PE_start" type="int" intent="in" order="3"></function-argument>
				<function-argument name="logPE_stride" type="int" intent="in" order="4"></function-argument>
				<function-argument name="PE_size" type="int" intent="in" order="5"></function-argument>
				<function-argument name="pSync" type="long*" intent="in" order="6"></function-argument>
			</function-arguments>
			<analyses>
				<analysis order="post" name="SHMEMVectorClockWrapper:tick" group="MUST_VectorClock">
                    <analysis-arguments>
                    </analysis-arguments>
                </analysis>
				<analysis order="post" name="SHMEMVectorClockWrapper:allToAllProcs" group="MUST_VectorClock">
                    <analysis-arguments>
                        <analysis-argument type="operation-len" analysis-arg-order="0">
                            <op-name group="MUST_Base" id="1">provideParallelIdStorage</op-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="1">
                            <call-arg-name>PE_start</call-arg-name>
                        </analysis-argument>
						<analysis-argument type="mapped" analysis-arg-order="2">
                            <call-arg-name>logPE_stride</call-arg-name>
                        </analysis-argument>
						<analysis-argument type="mapped" analysis-arg-order="3">
                            <call-arg-name>PE_size</call-arg-name>
                        </analysis-argument>
                    </analysis-arguments>
                </analysis>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_1_target" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_2_source" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_3_nlong" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_4_PE_start" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_5_logPE_stride" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_6_PE_size" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_7_pSync" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_fcollect32" return-type="void">
			<function-arguments>
				<function-argument name="target" type="void*" intent="in" order="0"></function-argument>
				<function-argument name="source" type="const void*" intent="in" order="1"></function-argument>
				<function-argument name="nlong" type="size_t" intent="in" order="2"></function-argument>
				<function-argument name="PE_start" type="int" intent="in" order="3"></function-argument>
				<function-argument name="logPE_stride" type="int" intent="in" order="4"></function-argument>
				<function-argument name="PE_size" type="int" intent="in" order="5"></function-argument>
				<function-argument name="pSync" type="long*" intent="in" order="6"></function-argument>
			</function-arguments>
			<analyses>
				<analysis order="post" name="SHMEMVectorClockWrapper:tick" group="MUST_VectorClock">
                    <analysis-arguments>
                    </analysis-arguments>
                </analysis>
				<analysis order="post" name="SHMEMVectorClockWrapper:allToAllProcs" group="MUST_VectorClock">
                    <analysis-arguments>
                        <analysis-argument type="operation-len" analysis-arg-order="0">
                            <op-name group="MUST_Base" id="1">provideParallelIdStorage</op-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="1">
                            <call-arg-name>PE_start</call-arg-name>
                        </analysis-argument>
						<analysis-argument type="mapped" analysis-arg-order="2">
                            <call-arg-name>logPE_stride</call-arg-name>
                        </analysis-argument>
						<analysis-argument type="mapped" analysis-arg-order="3">
                            <call-arg-name>PE_size</call-arg-name>
                        </analysis-argument>
                    </analysis-arguments>
                </analysis>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_1_target" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_2_source" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_3_nlong" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_4_PE_start" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_5_logPE_stride" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_6_PE_size" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_7_pSync" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_fcollect64" return-type="void">
			<function-arguments>
				<function-argument name="target" type="void*" intent="in" order="0"></function-argument>
				<function-argument name="source" type="const void*" intent="in" order="1"></function-argument>
				<function-argument name="nlong" type="size_t" intent="in" order="2"></function-argument>
				<function-argument name="PE_start" type="int" intent="in" order="3"></function-argument>
				<function-argument name="logPE_stride" type="int" intent="in" order="4"></function-argument>
				<function-argument name="PE_size" type="int" intent="in" order="5"></function-argument>
				<function-argument name="pSync" type="long*" intent="in" order="6"></function-argument>
			</function-arguments>
			<analyses>
				<analysis order="post" name="SHMEMVectorClockWrapper:tick" group="MUST_VectorClock">
                    <analysis-arguments>
                    </analysis-arguments>
                </analysis>
				<analysis order="post" name="SHMEMVectorClockWrapper:allToAllProcs" group="MUST_VectorClock">
                    <analysis-arguments>
                        <analysis-argument type="operation-len" analysis-arg-order="0">
                            <op-name group="MUST_Base" id="1">provideParallelIdStorage</op-name>
                        </analysis-argument>
                        <analysis-argument type="mapped" analysis-arg-order="1">
                            <call-arg-name>PE_start</call-arg-name>
                        </analysis-argument>
						<analysis-argument type="mapped" analysis-arg-order="2">
                            <call-arg-name>logPE_stride</call-arg-name>
                        </analysis-argument>
						<analysis-argument type="mapped" analysis-arg-order="3">
                            <call-arg-name>PE_size</call-arg-name>
                        </analysis-argument>
                    </analysis-arguments>
                </analysis>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_1_target" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_2_source" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_3_nlong" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_4_PE_start" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_5_logPE_stride" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_6_PE_size" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_7_pSync" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_alltoall32" return-type="void">
			<function-arguments>
				<function-argument name="target" type="void*" intent="in" order="0"></function-argument>
				<function-argument name="source" type="const void*" intent="in" order="1"></function-argument>
				<function-argument name="nelems" type="size_t" intent="in" order="2"></function-argument>
				<function-argument name="PE_start" type="int" intent="in" order="3"></function-argument>
				<function-argument name="logPE_stride" type="int" intent="in" order="4"></function-argument>
				<function-argument name="PE_size" type="int" intent="in" order="5"></function-argument>
				<function-argument name="pSync" type="long*" intent="in" order="6"></function-argument>
			</function-arguments>
			<analyses>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_1_target" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_2_source" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_3_nelems" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_4_PE_start" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_5_logPE_stride" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_6_PE_size" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_7_pSync" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_alltoall64" return-type="void">
			<function-arguments>
				<function-argument name="target" type="void*" intent="in" order="0"></function-argument>
				<function-argument name="source" type="const void*" intent="in" order="1"></function-argument>
				<function-argument name="nelems" type="size_t" intent="in" order="2"></function-argument>
				<function-argument name="PE_start" type="int" intent="in" order="3"></function-argument>
				<function-argument name="logPE_stride" type="int" intent="in" order="4"></function-argument>
				<function-argument name="PE_size" type="int" intent="in" order="5"></function-argument>
				<function-argument name="pSync" type="long*" intent="in" order="6"></function-argument>
			</function-arguments>
			<analyses>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_1_target" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_2_source" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_3_nelems" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_4_PE_start" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_5_logPE_stride" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_6_PE_size" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_7_pSync" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_alltoalls32" return-type="void">
			<function-arguments>
				<function-argument name="target" type="void*" intent="in" order="0"></function-argument>
				<function-argument name="source" type="const void*" intent="in" order="1"></function-argument>
				<function-argument name="dst" type="ptrdiff_t" intent="in" order="2"></function-argument>
				<function-argument name="sst" type="ptrdiff_t" intent="in" order="3"></function-argument>
				<function-argument name="nelems" type="size_t" intent="in" order="4"></function-argument>
				<function-argument name="PE_start" type="int" intent="in" order="5"></function-argument>
				<function-argument name="logPE_stride" type="int" intent="in" order="6"></function-argument>
				<function-argument name="PE_size" type="int" intent="in" order="7"></function-argument>
				<function-argument name="pSync" type="long*" intent="in" order="8"></function-argument>
			</function-arguments>
			<analyses>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_1_target" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_2_source" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_3_dst" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_4_sst" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_5_nelems" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_6_PE_start" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_7_logPE_stride" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_8_PE_size" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_9_pSync" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_alltoalls64" return-type="void">
			<function-arguments>
				<function-argument name="target" type="void*" intent="in" order="0"></function-argument>
				<function-argument name="source" type="const void*" intent="in" order="1"></function-argument>
				<function-argument name="dst" type="ptrdiff_t" intent="in" order="2"></function-argument>
				<function-argument name="sst" type="ptrdiff_t" intent="in" order="3"></function-argument>
				<function-argument name="nelems" type="size_t" intent="in" order="4"></function-argument>
				<function-argument name="PE_start" type="int" intent="in" order="5"></function-argument>
				<function-argument name="logPE_stride" type="int" intent="in" order="6"></function-argument>
				<function-argument name="PE_size" type="int" intent="in" order="7"></function-argument>
				<function-argument name="pSync" type="long*" intent="in" order="8"></function-argument>
			</function-arguments>
			<analyses>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_1_target" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_2_source" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_3_dst" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_4_sst" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_5_nelems" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_6_PE_start" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_7_logPE_stride" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_8_PE_size" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_9_pSync" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_short_and_to_all" return-type="void">
			<function-arguments>
				<function-argument name="target" type="short*" intent="in" order="0"></function-argument>
				<function-argument name="source" type="const short*" intent="in" order="1"></function-argument>
				<function-argument name="nreduce" type="int" intent="in" order="2"></function-argument>
				<function-argument name="PE_start" type="int" intent="in" order="3"></function-argument>
				<function-argument name="logPE_stride" type="int" intent="in" order="4"></function-argument>
				<function-argument name="PE_size" type="int" intent="in" order="5"></function-argument>
				<function-argument name="pWrk" type="short*" intent="in" order="6"></function-argument>
				<function-argument name="pSync" type="long*" intent="in" order="7"></function-argument>
			</function-arguments>
			<analyses>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_1_target" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_2_source" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_3_nreduce" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_4_PE_start" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_5_logPE_stride" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_6_PE_size" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_7_pWrk" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_8_pSync" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_int_and_to_all" return-type="void">
			<function-arguments>
				<function-argument name="target" type="int*" intent="in" order="0"></function-argument>
				<function-argument name="source" type="const int*" intent="in" order="1"></function-argument>
				<function-argument name="nreduce" type="int" intent="in" order="2"></function-argument>
				<function-argument name="PE_start" type="int" intent="in" order="3"></function-argument>
				<function-argument name="logPE_stride" type="int" intent="in" order="4"></function-argument>
				<function-argument name="PE_size" type="int" intent="in" order="5"></function-argument>
				<function-argument name="pWrk" type="int*" intent="in" order="6"></function-argument>
				<function-argument name="pSync" type="long*" intent="in" order="7"></function-argument>
			</function-arguments>
			<analyses>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_1_target" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_2_source" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_3_nreduce" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_4_PE_start" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_5_logPE_stride" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_6_PE_size" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_7_pWrk" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_8_pSync" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_long_and_to_all" return-type="void">
			<function-arguments>
				<function-argument name="target" type="long*" intent="in" order="0"></function-argument>
				<function-argument name="source" type="const long*" intent="in" order="1"></function-argument>
				<function-argument name="nreduce" type="int" intent="in" order="2"></function-argument>
				<function-argument name="PE_start" type="int" intent="in" order="3"></function-argument>
				<function-argument name="logPE_stride" type="int" intent="in" order="4"></function-argument>
				<function-argument name="PE_size" type="int" intent="in" order="5"></function-argument>
				<function-argument name="pWrk" type="long*" intent="in" order="6"></function-argument>
				<function-argument name="pSync" type="long*" intent="in" order="7"></function-argument>
			</function-arguments>
			<analyses>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_1_target" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_2_source" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_3_nreduce" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_4_PE_start" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_5_logPE_stride" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_6_PE_size" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_7_pWrk" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_8_pSync" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_longlong_and_to_all" return-type="void">
			<function-arguments>
				<function-argument name="target" type="long long*" intent="in" order="0"></function-argument>
				<function-argument name="source" type="const long long*" intent="in" order="1"></function-argument>
				<function-argument name="nreduce" type="int" intent="in" order="2"></function-argument>
				<function-argument name="PE_start" type="int" intent="in" order="3"></function-argument>
				<function-argument name="logPE_stride" type="int" intent="in" order="4"></function-argument>
				<function-argument name="PE_size" type="int" intent="in" order="5"></function-argument>
				<function-argument name="pWrk" type="long long*" intent="in" order="6"></function-argument>
				<function-argument name="pSync" type="long*" intent="in" order="7"></function-argument>
			</function-arguments>
			<analyses>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_1_target" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_2_source" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_3_nreduce" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_4_PE_start" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_5_logPE_stride" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_6_PE_size" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_7_pWrk" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_8_pSync" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_short_or_to_all" return-type="void">
			<function-arguments>
				<function-argument name="target" type="short*" intent="in" order="0"></function-argument>
				<function-argument name="source" type="const short*" intent="in" order="1"></function-argument>
				<function-argument name="nreduce" type="int" intent="in" order="2"></function-argument>
				<function-argument name="PE_start" type="int" intent="in" order="3"></function-argument>
				<function-argument name="logPE_stride" type="int" intent="in" order="4"></function-argument>
				<function-argument name="PE_size" type="int" intent="in" order="5"></function-argument>
				<function-argument name="pWrk" type="short*" intent="in" order="6"></function-argument>
				<function-argument name="pSync" type="long*" intent="in" order="7"></function-argument>
			</function-arguments>
			<analyses>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_1_target" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_2_source" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_3_nreduce" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_4_PE_start" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_5_logPE_stride" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_6_PE_size" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_7_pWrk" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_8_pSync" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_int_or_to_all" return-type="void">
			<function-arguments>
				<function-argument name="target" type="int*" intent="in" order="0"></function-argument>
				<function-argument name="source" type="const int*" intent="in" order="1"></function-argument>
				<function-argument name="nreduce" type="int" intent="in" order="2"></function-argument>
				<function-argument name="PE_start" type="int" intent="in" order="3"></function-argument>
				<function-argument name="logPE_stride" type="int" intent="in" order="4"></function-argument>
				<function-argument name="PE_size" type="int" intent="in" order="5"></function-argument>
				<function-argument name="pWrk" type="int*" intent="in" order="6"></function-argument>
				<function-argument name="pSync" type="long*" intent="in" order="7"></function-argument>
			</function-arguments>
			<analyses>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_1_target" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_2_source" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_3_nreduce" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_4_PE_start" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_5_logPE_stride" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_6_PE_size" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_7_pWrk" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_8_pSync" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_long_or_to_all" return-type="void">
			<function-arguments>
				<function-argument name="target" type="long*" intent="in" order="0"></function-argument>
				<function-argument name="source" type="const long*" intent="in" order="1"></function-argument>
				<function-argument name="nreduce" type="int" intent="in" order="2"></function-argument>
				<function-argument name="PE_start" type="int" intent="in" order="3"></function-argument>
				<function-argument name="logPE_stride" type="int" intent="in" order="4"></function-argument>
				<function-argument name="PE_size" type="int" intent="in" order="5"></function-argument>
				<function-argument name="pWrk" type="long*" intent="in" order="6"></function-argument>
				<function-argument name="pSync" type="long*" intent="in" order="7"></function-argument>
			</function-arguments>
			<analyses>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_1_target" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_2_source" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_3_nreduce" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_4_PE_start" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_5_logPE_stride" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_6_PE_size" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_7_pWrk" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_8_pSync" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_longlong_or_to_all" return-type="void">
			<function-arguments>
				<function-argument name="target" type="long long*" intent="in" order="0"></function-argument>
				<function-argument name="source" type="const long long*" intent="in" order="1"></function-argument>
				<function-argument name="nreduce" type="int" intent="in" order="2"></function-argument>
				<function-argument name="PE_start" type="int" intent="in" order="3"></function-argument>
				<function-argument name="logPE_stride" type="int" intent="in" order="4"></function-argument>
				<function-argument name="PE_size" type="int" intent="in" order="5"></function-argument>
				<function-argument name="pWrk" type="long long*" intent="in" order="6"></function-argument>
				<function-argument name="pSync" type="long*" intent="in" order="7"></function-argument>
			</function-arguments>
			<analyses>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_1_target" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_2_source" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_3_nreduce" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_4_PE_start" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_5_logPE_stride" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_6_PE_size" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_7_pWrk" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_8_pSync" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_short_xor_to_all" return-type="void">
			<function-arguments>
				<function-argument name="target" type="short*" intent="in" order="0"></function-argument>
				<function-argument name="source" type="const short*" intent="in" order="1"></function-argument>
				<function-argument name="nreduce" type="int" intent="in" order="2"></function-argument>
				<function-argument name="PE_start" type="int" intent="in" order="3"></function-argument>
				<function-argument name="logPE_stride" type="int" intent="in" order="4"></function-argument>
				<function-argument name="PE_size" type="int" intent="in" order="5"></function-argument>
				<function-argument name="pWrk" type="short*" intent="in" order="6"></function-argument>
				<function-argument name="pSync" type="long*" intent="in" order="7"></function-argument>
			</function-arguments>
			<analyses>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_1_target" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_2_source" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_3_nreduce" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_4_PE_start" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_5_logPE_stride" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_6_PE_size" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_7_pWrk" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_8_pSync" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_int_xor_to_all" return-type="void">
			<function-arguments>
				<function-argument name="target" type="int*" intent="in" order="0"></function-argument>
				<function-argument name="source" type="const int*" intent="in" order="1"></function-argument>
				<function-argument name="nreduce" type="int" intent="in" order="2"></function-argument>
				<function-argument name="PE_start" type="int" intent="in" order="3"></function-argument>
				<function-argument name="logPE_stride" type="int" intent="in" order="4"></function-argument>
				<function-argument name="PE_size" type="int" intent="in" order="5"></function-argument>
				<function-argument name="pWrk" type="int*" intent="in" order="6"></function-argument>
				<function-argument name="pSync" type="long*" intent="in" order="7"></function-argument>
			</function-arguments>
			<analyses>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_1_target" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_2_source" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_3_nreduce" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_4_PE_start" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_5_logPE_stride" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_6_PE_size" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_7_pWrk" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_8_pSync" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_long_xor_to_all" return-type="void">
			<function-arguments>
				<function-argument name="target" type="long*" intent="in" order="0"></function-argument>
				<function-argument name="source" type="const long*" intent="in" order="1"></function-argument>
				<function-argument name="nreduce" type="int" intent="in" order="2"></function-argument>
				<function-argument name="PE_start" type="int" intent="in" order="3"></function-argument>
				<function-argument name="logPE_stride" type="int" intent="in" order="4"></function-argument>
				<function-argument name="PE_size" type="int" intent="in" order="5"></function-argument>
				<function-argument name="pWrk" type="long*" intent="in" order="6"></function-argument>
				<function-argument name="pSync" type="long*" intent="in" order="7"></function-argument>
			</function-arguments>
			<analyses>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_1_target" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_2_source" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_3_nreduce" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_4_PE_start" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_5_logPE_stride" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_6_PE_size" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_7_pWrk" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_8_pSync" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_longlong_xor_to_all" return-type="void">
			<function-arguments>
				<function-argument name="target" type="long long*" intent="in" order="0"></function-argument>
				<function-argument name="source" type="const long long*" intent="in" order="1"></function-argument>
				<function-argument name="nreduce" type="int" intent="in" order="2"></function-argument>
				<function-argument name="PE_start" type="int" intent="in" order="3"></function-argument>
				<function-argument name="logPE_stride" type="int" intent="in" order="4"></function-argument>
				<function-argument name="PE_size" type="int" intent="in" order="5"></function-argument>
				<function-argument name="pWrk" type="long long*" intent="in" order="6"></function-argument>
				<function-argument name="pSync" type="long*" intent="in" order="7"></function-argument>
			</function-arguments>
			<analyses>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_1_target" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_2_source" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_3_nreduce" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_4_PE_start" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_5_logPE_stride" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_6_PE_size" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_7_pWrk" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_8_pSync" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_short_max_to_all" return-type="void">
			<function-arguments>
				<function-argument name="target" type="short*" intent="in" order="0"></function-argument>
				<function-argument name="source" type="const short*" intent="in" order="1"></function-argument>
				<function-argument name="nreduce" type="int" intent="in" order="2"></function-argument>
				<function-argument name="PE_start" type="int" intent="in" order="3"></function-argument>
				<function-argument name="logPE_stride" type="int" intent="in" order="4"></function-argument>
				<function-argument name="PE_size" type="int" intent="in" order="5"></function-argument>
				<function-argument name="pWrk" type="short*" intent="in" order="6"></function-argument>
				<function-argument name="pSync" type="long*" intent="in" order="7"></function-argument>
			</function-arguments>
			<analyses>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_1_target" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_2_source" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_3_nreduce" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_4_PE_start" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_5_logPE_stride" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_6_PE_size" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_7_pWrk" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_8_pSync" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_int_max_to_all" return-type="void">
			<function-arguments>
				<function-argument name="target" type="int*" intent="in" order="0"></function-argument>
				<function-argument name="source" type="const int*" intent="in" order="1"></function-argument>
				<function-argument name="nreduce" type="int" intent="in" order="2"></function-argument>
				<function-argument name="PE_start" type="int" intent="in" order="3"></function-argument>
				<function-argument name="logPE_stride" type="int" intent="in" order="4"></function-argument>
				<function-argument name="PE_size" type="int" intent="in" order="5"></function-argument>
				<function-argument name="pWrk" type="int*" intent="in" order="6"></function-argument>
				<function-argument name="pSync" type="long*" intent="in" order="7"></function-argument>
			</function-arguments>
			<analyses>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_1_target" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_2_source" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_3_nreduce" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_4_PE_start" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_5_logPE_stride" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_6_PE_size" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_7_pWrk" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_8_pSync" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_long_max_to_all" return-type="void">
			<function-arguments>
				<function-argument name="target" type="long*" intent="in" order="0"></function-argument>
				<function-argument name="source" type="const long*" intent="in" order="1"></function-argument>
				<function-argument name="nreduce" type="int" intent="in" order="2"></function-argument>
				<function-argument name="PE_start" type="int" intent="in" order="3"></function-argument>
				<function-argument name="logPE_stride" type="int" intent="in" order="4"></function-argument>
				<function-argument name="PE_size" type="int" intent="in" order="5"></function-argument>
				<function-argument name="pWrk" type="long*" intent="in" order="6"></function-argument>
				<function-argument name="pSync" type="long*" intent="in" order="7"></function-argument>
			</function-arguments>
			<analyses>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_1_target" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_2_source" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_3_nreduce" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_4_PE_start" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_5_logPE_stride" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_6_PE_size" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_7_pWrk" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_8_pSync" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_longlong_max_to_all" return-type="void">
			<function-arguments>
				<function-argument name="target" type="long long*" intent="in" order="0"></function-argument>
				<function-argument name="source" type="const long long*" intent="in" order="1"></function-argument>
				<function-argument name="nreduce" type="int" intent="in" order="2"></function-argument>
				<function-argument name="PE_start" type="int" intent="in" order="3"></function-argument>
				<function-argument name="logPE_stride" type="int" intent="in" order="4"></function-argument>
				<function-argument name="PE_size" type="int" intent="in" order="5"></function-argument>
				<function-argument name="pWrk" type="long long*" intent="in" order="6"></function-argument>
				<function-argument name="pSync" type="long*" intent="in" order="7"></function-argument>
			</function-arguments>
			<analyses>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_1_target" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_2_source" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_3_nreduce" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_4_PE_start" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_5_logPE_stride" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_6_PE_size" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_7_pWrk" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_8_pSync" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_float_max_to_all" return-type="void">
			<function-arguments>
				<function-argument name="target" type="float*" intent="in" order="0"></function-argument>
				<function-argument name="source" type="const float*" intent="in" order="1"></function-argument>
				<function-argument name="nreduce" type="int" intent="in" order="2"></function-argument>
				<function-argument name="PE_start" type="int" intent="in" order="3"></function-argument>
				<function-argument name="logPE_stride" type="int" intent="in" order="4"></function-argument>
				<function-argument name="PE_size" type="int" intent="in" order="5"></function-argument>
				<function-argument name="pWrk" type="float*" intent="in" order="6"></function-argument>
				<function-argument name="pSync" type="long*" intent="in" order="7"></function-argument>
			</function-arguments>
			<analyses>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_1_target" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_2_source" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_3_nreduce" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_4_PE_start" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_5_logPE_stride" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_6_PE_size" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_7_pWrk" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_8_pSync" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_double_max_to_all" return-type="void">
			<function-arguments>
				<function-argument name="target" type="double*" intent="in" order="0"></function-argument>
				<function-argument name="source" type="const double*" intent="in" order="1"></function-argument>
				<function-argument name="nreduce" type="int" intent="in" order="2"></function-argument>
				<function-argument name="PE_start" type="int" intent="in" order="3"></function-argument>
				<function-argument name="logPE_stride" type="int" intent="in" order="4"></function-argument>
				<function-argument name="PE_size" type="int" intent="in" order="5"></function-argument>
				<function-argument name="pWrk" type="double*" intent="in" order="6"></function-argument>
				<function-argument name="pSync" type="long*" intent="in" order="7"></function-argument>
			</function-arguments>
			<analyses>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_1_target" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_2_source" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_3_nreduce" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_4_PE_start" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_5_logPE_stride" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_6_PE_size" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_7_pWrk" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_8_pSync" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_longdouble_max_to_all" return-type="void">
			<function-arguments>
				<function-argument name="target" type="long double*" intent="in" order="0"></function-argument>
				<function-argument name="source" type="const long double*" intent="in" order="1"></function-argument>
				<function-argument name="nreduce" type="int" intent="in" order="2"></function-argument>
				<function-argument name="PE_start" type="int" intent="in" order="3"></function-argument>
				<function-argument name="logPE_stride" type="int" intent="in" order="4"></function-argument>
				<function-argument name="PE_size" type="int" intent="in" order="5"></function-argument>
				<function-argument name="pWrk" type="long double*" intent="in" order="6"></function-argument>
				<function-argument name="pSync" type="long*" intent="in" order="7"></function-argument>
			</function-arguments>
			<analyses>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_1_target" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_2_source" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_3_nreduce" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_4_PE_start" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_5_logPE_stride" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_6_PE_size" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_7_pWrk" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_8_pSync" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_short_min_to_all" return-type="void">
			<function-arguments>
				<function-argument name="target" type="short*" intent="in" order="0"></function-argument>
				<function-argument name="source" type="const short*" intent="in" order="1"></function-argument>
				<function-argument name="nreduce" type="int" intent="in" order="2"></function-argument>
				<function-argument name="PE_start" type="int" intent="in" order="3"></function-argument>
				<function-argument name="logPE_stride" type="int" intent="in" order="4"></function-argument>
				<function-argument name="PE_size" type="int" intent="in" order="5"></function-argument>
				<function-argument name="pWrk" type="short*" intent="in" order="6"></function-argument>
				<function-argument name="pSync" type="long*" intent="in" order="7"></function-argument>
			</function-arguments>
			<analyses>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_1_target" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_2_source" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_3_nreduce" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_4_PE_start" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_5_logPE_stride" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_6_PE_size" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_7_pWrk" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_8_pSync" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_int_min_to_all" return-type="void">
			<function-arguments>
				<function-argument name="target" type="int*" intent="in" order="0"></function-argument>
				<function-argument name="source" type="const int*" intent="in" order="1"></function-argument>
				<function-argument name="nreduce" type="int" intent="in" order="2"></function-argument>
				<function-argument name="PE_start" type="int" intent="in" order="3"></function-argument>
				<function-argument name="logPE_stride" type="int" intent="in" order="4"></function-argument>
				<function-argument name="PE_size" type="int" intent="in" order="5"></function-argument>
				<function-argument name="pWrk" type="int*" intent="in" order="6"></function-argument>
				<function-argument name="pSync" type="long*" intent="in" order="7"></function-argument>
			</function-arguments>
			<analyses>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_1_target" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_2_source" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_3_nreduce" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_4_PE_start" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_5_logPE_stride" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_6_PE_size" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_7_pWrk" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_8_pSync" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_long_min_to_all" return-type="void">
			<function-arguments>
				<function-argument name="target" type="long*" intent="in" order="0"></function-argument>
				<function-argument name="source" type="const long*" intent="in" order="1"></function-argument>
				<function-argument name="nreduce" type="int" intent="in" order="2"></function-argument>
				<function-argument name="PE_start" type="int" intent="in" order="3"></function-argument>
				<function-argument name="logPE_stride" type="int" intent="in" order="4"></function-argument>
				<function-argument name="PE_size" type="int" intent="in" order="5"></function-argument>
				<function-argument name="pWrk" type="long*" intent="in" order="6"></function-argument>
				<function-argument name="pSync" type="long*" intent="in" order="7"></function-argument>
			</function-arguments>
			<analyses>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_1_target" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_2_source" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_3_nreduce" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_4_PE_start" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_5_logPE_stride" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_6_PE_size" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_7_pWrk" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_8_pSync" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_longlong_min_to_all" return-type="void">
			<function-arguments>
				<function-argument name="target" type="long long*" intent="in" order="0"></function-argument>
				<function-argument name="source" type="const long long*" intent="in" order="1"></function-argument>
				<function-argument name="nreduce" type="int" intent="in" order="2"></function-argument>
				<function-argument name="PE_start" type="int" intent="in" order="3"></function-argument>
				<function-argument name="logPE_stride" type="int" intent="in" order="4"></function-argument>
				<function-argument name="PE_size" type="int" intent="in" order="5"></function-argument>
				<function-argument name="pWrk" type="long long*" intent="in" order="6"></function-argument>
				<function-argument name="pSync" type="long*" intent="in" order="7"></function-argument>
			</function-arguments>
			<analyses>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_1_target" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_2_source" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_3_nreduce" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_4_PE_start" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_5_logPE_stride" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_6_PE_size" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_7_pWrk" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_8_pSync" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_float_min_to_all" return-type="void">
			<function-arguments>
				<function-argument name="target" type="float*" intent="in" order="0"></function-argument>
				<function-argument name="source" type="const float*" intent="in" order="1"></function-argument>
				<function-argument name="nreduce" type="int" intent="in" order="2"></function-argument>
				<function-argument name="PE_start" type="int" intent="in" order="3"></function-argument>
				<function-argument name="logPE_stride" type="int" intent="in" order="4"></function-argument>
				<function-argument name="PE_size" type="int" intent="in" order="5"></function-argument>
				<function-argument name="pWrk" type="float*" intent="in" order="6"></function-argument>
				<function-argument name="pSync" type="long*" intent="in" order="7"></function-argument>
			</function-arguments>
			<analyses>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_1_target" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_2_source" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_3_nreduce" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_4_PE_start" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_5_logPE_stride" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_6_PE_size" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_7_pWrk" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_8_pSync" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_double_min_to_all" return-type="void">
			<function-arguments>
				<function-argument name="target" type="double*" intent="in" order="0"></function-argument>
				<function-argument name="source" type="const double*" intent="in" order="1"></function-argument>
				<function-argument name="nreduce" type="int" intent="in" order="2"></function-argument>
				<function-argument name="PE_start" type="int" intent="in" order="3"></function-argument>
				<function-argument name="logPE_stride" type="int" intent="in" order="4"></function-argument>
				<function-argument name="PE_size" type="int" intent="in" order="5"></function-argument>
				<function-argument name="pWrk" type="double*" intent="in" order="6"></function-argument>
				<function-argument name="pSync" type="long*" intent="in" order="7"></function-argument>
			</function-arguments>
			<analyses>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_1_target" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_2_source" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_3_nreduce" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_4_PE_start" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_5_logPE_stride" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_6_PE_size" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_7_pWrk" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_8_pSync" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_longdouble_min_to_all" return-type="void">
			<function-arguments>
				<function-argument name="target" type="long double*" intent="in" order="0"></function-argument>
				<function-argument name="source" type="const long double*" intent="in" order="1"></function-argument>
				<function-argument name="nreduce" type="int" intent="in" order="2"></function-argument>
				<function-argument name="PE_start" type="int" intent="in" order="3"></function-argument>
				<function-argument name="logPE_stride" type="int" intent="in" order="4"></function-argument>
				<function-argument name="PE_size" type="int" intent="in" order="5"></function-argument>
				<function-argument name="pWrk" type="long double*" intent="in" order="6"></function-argument>
				<function-argument name="pSync" type="long*" intent="in" order="7"></function-argument>
			</function-arguments>
			<analyses>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_1_target" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_2_source" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_3_nreduce" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_4_PE_start" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_5_logPE_stride" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_6_PE_size" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_7_pWrk" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_8_pSync" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_short_sum_to_all" return-type="void">
			<function-arguments>
				<function-argument name="target" type="short*" intent="in" order="0"></function-argument>
				<function-argument name="source" type="const short*" intent="in" order="1"></function-argument>
				<function-argument name="nreduce" type="int" intent="in" order="2"></function-argument>
				<function-argument name="PE_start" type="int" intent="in" order="3"></function-argument>
				<function-argument name="logPE_stride" type="int" intent="in" order="4"></function-argument>
				<function-argument name="PE_size" type="int" intent="in" order="5"></function-argument>
				<function-argument name="pWrk" type="short*" intent="in" order="6"></function-argument>
				<function-argument name="pSync" type="long*" intent="in" order="7"></function-argument>
			</function-arguments>
			<analyses>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_1_target" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_2_source" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_3_nreduce" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_4_PE_start" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_5_logPE_stride" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_6_PE_size" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_7_pWrk" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_8_pSync" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_int_sum_to_all" return-type="void">
			<function-arguments>
				<function-argument name="target" type="int*" intent="in" order="0"></function-argument>
				<function-argument name="source" type="const int*" intent="in" order="1"></function-argument>
				<function-argument name="nreduce" type="int" intent="in" order="2"></function-argument>
				<function-argument name="PE_start" type="int" intent="in" order="3"></function-argument>
				<function-argument name="logPE_stride" type="int" intent="in" order="4"></function-argument>
				<function-argument name="PE_size" type="int" intent="in" order="5"></function-argument>
				<function-argument name="pWrk" type="int*" intent="in" order="6"></function-argument>
				<function-argument name="pSync" type="long*" intent="in" order="7"></function-argument>
			</function-arguments>
			<analyses>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_1_target" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_2_source" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_3_nreduce" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_4_PE_start" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_5_logPE_stride" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_6_PE_size" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_7_pWrk" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_8_pSync" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_long_sum_to_all" return-type="void">
			<function-arguments>
				<function-argument name="target" type="long*" intent="in" order="0"></function-argument>
				<function-argument name="source" type="const long*" intent="in" order="1"></function-argument>
				<function-argument name="nreduce" type="int" intent="in" order="2"></function-argument>
				<function-argument name="PE_start" type="int" intent="in" order="3"></function-argument>
				<function-argument name="logPE_stride" type="int" intent="in" order="4"></function-argument>
				<function-argument name="PE_size" type="int" intent="in" order="5"></function-argument>
				<function-argument name="pWrk" type="long*" intent="in" order="6"></function-argument>
				<function-argument name="pSync" type="long*" intent="in" order="7"></function-argument>
			</function-arguments>
			<analyses>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_1_target" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_2_source" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_3_nreduce" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_4_PE_start" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_5_logPE_stride" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_6_PE_size" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_7_pWrk" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_8_pSync" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_longlong_sum_to_all" return-type="void">
			<function-arguments>
				<function-argument name="target" type="long long*" intent="in" order="0"></function-argument>
				<function-argument name="source" type="const long long*" intent="in" order="1"></function-argument>
				<function-argument name="nreduce" type="int" intent="in" order="2"></function-argument>
				<function-argument name="PE_start" type="int" intent="in" order="3"></function-argument>
				<function-argument name="logPE_stride" type="int" intent="in" order="4"></function-argument>
				<function-argument name="PE_size" type="int" intent="in" order="5"></function-argument>
				<function-argument name="pWrk" type="long long*" intent="in" order="6"></function-argument>
				<function-argument name="pSync" type="long*" intent="in" order="7"></function-argument>
			</function-arguments>
			<analyses>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_1_target" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_2_source" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_3_nreduce" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_4_PE_start" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_5_logPE_stride" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_6_PE_size" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_7_pWrk" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_8_pSync" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_float_sum_to_all" return-type="void">
			<function-arguments>
				<function-argument name="target" type="float*" intent="in" order="0"></function-argument>
				<function-argument name="source" type="const float*" intent="in" order="1"></function-argument>
				<function-argument name="nreduce" type="int" intent="in" order="2"></function-argument>
				<function-argument name="PE_start" type="int" intent="in" order="3"></function-argument>
				<function-argument name="logPE_stride" type="int" intent="in" order="4"></function-argument>
				<function-argument name="PE_size" type="int" intent="in" order="5"></function-argument>
				<function-argument name="pWrk" type="float*" intent="in" order="6"></function-argument>
				<function-argument name="pSync" type="long*" intent="in" order="7"></function-argument>
			</function-arguments>
			<analyses>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_1_target" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_2_source" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_3_nreduce" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_4_PE_start" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_5_logPE_stride" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_6_PE_size" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_7_pWrk" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_8_pSync" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_double_sum_to_all" return-type="void">
			<function-arguments>
				<function-argument name="target" type="double*" intent="in" order="0"></function-argument>
				<function-argument name="source" type="const double*" intent="in" order="1"></function-argument>
				<function-argument name="nreduce" type="int" intent="in" order="2"></function-argument>
				<function-argument name="PE_start" type="int" intent="in" order="3"></function-argument>
				<function-argument name="logPE_stride" type="int" intent="in" order="4"></function-argument>
				<function-argument name="PE_size" type="int" intent="in" order="5"></function-argument>
				<function-argument name="pWrk" type="double*" intent="in" order="6"></function-argument>
				<function-argument name="pSync" type="long*" intent="in" order="7"></function-argument>
			</function-arguments>
			<analyses>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_1_target" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_2_source" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_3_nreduce" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_4_PE_start" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_5_logPE_stride" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_6_PE_size" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_7_pWrk" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_8_pSync" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_longdouble_sum_to_all" return-type="void">
			<function-arguments>
				<function-argument name="target" type="long double*" intent="in" order="0"></function-argument>
				<function-argument name="source" type="const long double*" intent="in" order="1"></function-argument>
				<function-argument name="nreduce" type="int" intent="in" order="2"></function-argument>
				<function-argument name="PE_start" type="int" intent="in" order="3"></function-argument>
				<function-argument name="logPE_stride" type="int" intent="in" order="4"></function-argument>
				<function-argument name="PE_size" type="int" intent="in" order="5"></function-argument>
				<function-argument name="pWrk" type="long double*" intent="in" order="6"></function-argument>
				<function-argument name="pSync" type="long*" intent="in" order="7"></function-argument>
			</function-arguments>
			<analyses>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_1_target" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_2_source" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_3_nreduce" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_4_PE_start" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_5_logPE_stride" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_6_PE_size" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_7_pWrk" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_8_pSync" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_short_prod_to_all" return-type="void">
			<function-arguments>
				<function-argument name="target" type="short*" intent="in" order="0"></function-argument>
				<function-argument name="source" type="const short*" intent="in" order="1"></function-argument>
				<function-argument name="nreduce" type="int" intent="in" order="2"></function-argument>
				<function-argument name="PE_start" type="int" intent="in" order="3"></function-argument>
				<function-argument name="logPE_stride" type="int" intent="in" order="4"></function-argument>
				<function-argument name="PE_size" type="int" intent="in" order="5"></function-argument>
				<function-argument name="pWrk" type="short*" intent="in" order="6"></function-argument>
				<function-argument name="pSync" type="long*" intent="in" order="7"></function-argument>
			</function-arguments>
			<analyses>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_1_target" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_2_source" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_3_nreduce" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_4_PE_start" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_5_logPE_stride" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_6_PE_size" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_7_pWrk" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_8_pSync" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_int_prod_to_all" return-type="void">
			<function-arguments>
				<function-argument name="target" type="int*" intent="in" order="0"></function-argument>
				<function-argument name="source" type="const int*" intent="in" order="1"></function-argument>
				<function-argument name="nreduce" type="int" intent="in" order="2"></function-argument>
				<function-argument name="PE_start" type="int" intent="in" order="3"></function-argument>
				<function-argument name="logPE_stride" type="int" intent="in" order="4"></function-argument>
				<function-argument name="PE_size" type="int" intent="in" order="5"></function-argument>
				<function-argument name="pWrk" type="int*" intent="in" order="6"></function-argument>
				<function-argument name="pSync" type="long*" intent="in" order="7"></function-argument>
			</function-arguments>
			<analyses>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_1_target" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_2_source" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_3_nreduce" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_4_PE_start" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_5_logPE_stride" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_6_PE_size" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_7_pWrk" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_8_pSync" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_long_prod_to_all" return-type="void">
			<function-arguments>
				<function-argument name="target" type="long*" intent="in" order="0"></function-argument>
				<function-argument name="source" type="const long*" intent="in" order="1"></function-argument>
				<function-argument name="nreduce" type="int" intent="in" order="2"></function-argument>
				<function-argument name="PE_start" type="int" intent="in" order="3"></function-argument>
				<function-argument name="logPE_stride" type="int" intent="in" order="4"></function-argument>
				<function-argument name="PE_size" type="int" intent="in" order="5"></function-argument>
				<function-argument name="pWrk" type="long*" intent="in" order="6"></function-argument>
				<function-argument name="pSync" type="long*" intent="in" order="7"></function-argument>
			</function-arguments>
			<analyses>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_1_target" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_2_source" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_3_nreduce" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_4_PE_start" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_5_logPE_stride" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_6_PE_size" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_7_pWrk" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_8_pSync" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_longlong_prod_to_all" return-type="void">
			<function-arguments>
				<function-argument name="target" type="long long*" intent="in" order="0"></function-argument>
				<function-argument name="source" type="const long long*" intent="in" order="1"></function-argument>
				<function-argument name="nreduce" type="int" intent="in" order="2"></function-argument>
				<function-argument name="PE_start" type="int" intent="in" order="3"></function-argument>
				<function-argument name="logPE_stride" type="int" intent="in" order="4"></function-argument>
				<function-argument name="PE_size" type="int" intent="in" order="5"></function-argument>
				<function-argument name="pWrk" type="long long*" intent="in" order="6"></function-argument>
				<function-argument name="pSync" type="long*" intent="in" order="7"></function-argument>
			</function-arguments>
			<analyses>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_1_target" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_2_source" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_3_nreduce" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_4_PE_start" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_5_logPE_stride" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_6_PE_size" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_7_pWrk" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_8_pSync" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_float_prod_to_all" return-type="void">
			<function-arguments>
				<function-argument name="target" type="float*" intent="in" order="0"></function-argument>
				<function-argument name="source" type="const float*" intent="in" order="1"></function-argument>
				<function-argument name="nreduce" type="int" intent="in" order="2"></function-argument>
				<function-argument name="PE_start" type="int" intent="in" order="3"></function-argument>
				<function-argument name="logPE_stride" type="int" intent="in" order="4"></function-argument>
				<function-argument name="PE_size" type="int" intent="in" order="5"></function-argument>
				<function-argument name="pWrk" type="float*" intent="in" order="6"></function-argument>
				<function-argument name="pSync" type="long*" intent="in" order="7"></function-argument>
			</function-arguments>
			<analyses>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_1_target" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_2_source" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_3_nreduce" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_4_PE_start" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_5_logPE_stride" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_6_PE_size" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_7_pWrk" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_8_pSync" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_double_prod_to_all" return-type="void">
			<function-arguments>
				<function-argument name="target" type="double*" intent="in" order="0"></function-argument>
				<function-argument name="source" type="const double*" intent="in" order="1"></function-argument>
				<function-argument name="nreduce" type="int" intent="in" order="2"></function-argument>
				<function-argument name="PE_start" type="int" intent="in" order="3"></function-argument>
				<function-argument name="logPE_stride" type="int" intent="in" order="4"></function-argument>
				<function-argument name="PE_size" type="int" intent="in" order="5"></function-argument>
				<function-argument name="pWrk" type="double*" intent="in" order="6"></function-argument>
				<function-argument name="pSync" type="long*" intent="in" order="7"></function-argument>
			</function-arguments>
			<analyses>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_1_target" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_2_source" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_3_nreduce" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_4_PE_start" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_5_logPE_stride" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_6_PE_size" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_7_pWrk" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_8_pSync" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_longdouble_prod_to_all" return-type="void">
			<function-arguments>
				<function-argument name="target" type="long double*" intent="in" order="0"></function-argument>
				<function-argument name="source" type="const long double*" intent="in" order="1"></function-argument>
				<function-argument name="nreduce" type="int" intent="in" order="2"></function-argument>
				<function-argument name="PE_start" type="int" intent="in" order="3"></function-argument>
				<function-argument name="logPE_stride" type="int" intent="in" order="4"></function-argument>
				<function-argument name="PE_size" type="int" intent="in" order="5"></function-argument>
				<function-argument name="pWrk" type="long double*" intent="in" order="6"></function-argument>
				<function-argument name="pSync" type="long*" intent="in" order="7"></function-argument>
			</function-arguments>
			<analyses>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_1_target" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_2_source" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_3_nreduce" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_4_PE_start" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_5_logPE_stride" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_6_PE_size" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_7_pWrk" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_8_pSync" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_udcflush" return-type="void">
			<function-arguments>
			</function-arguments>
			<analyses>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_udcflush_line" return-type="void">
			<function-arguments>
				<function-argument name="target" type="void*" intent="in" order="0"></function-argument>
			</function-arguments>
			<analyses>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_1_target" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_set_cache_inv" return-type="void">
			<function-arguments>
			</function-arguments>
			<analyses>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_set_cache_line_inv" return-type="void">
			<function-arguments>
				<function-argument name="target" type="void*" intent="in" order="0"></function-argument>
			</function-arguments>
			<analyses>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_1_target" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_clear_cache_inv" return-type="void">
			<function-arguments>
			</function-arguments>
			<analyses>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
		<function name="shmem_clear_cache_line_inv" return-type="void">
			<function-arguments>
				<function-argument name="target" type="void*" intent="in" order="0"></function-argument>
			</function-arguments>
			<analyses>
			</analyses>
			<operations>
				<operation group="MUST_Base" name="provideLocationIdStorage" order="pre" id="1">
					<operation-arguments>
						<operation-argument op-arg-order="0"><call-arg-name>USE_CALLNAME</call-arg-name></operation-argument>
						<operation-argument op-arg-order="1"><call-arg-name>USE_CALLID</call-arg-name></operation-argument>
					</operation-arguments>
				</operation>
				<operation group="MUST_Base" name="provideParallelIdStorage" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
				<operation group="MUST_Base" name="buildArgumentId_1_target" order="pre" id="1">
					<operation-arguments></operation-arguments>
				</operation>
			</operations>
		</function>
	</functions>
</api-specification>
